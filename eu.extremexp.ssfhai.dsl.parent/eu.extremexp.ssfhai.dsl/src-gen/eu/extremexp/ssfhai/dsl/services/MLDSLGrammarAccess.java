/*
 * generated by Xtext 2.40.0.M3
 */
package eu.extremexp.ssfhai.dsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MLDSLGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eu.extremexp.ssfhai.dsl.MLDSL.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAppKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cWorkflowsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cWorkflowsWorkflowParserRuleCall_3_0 = (RuleCall)cWorkflowsAssignment_3.eContents().get(0);
		
		//Model:
		//    'app' name=ID ';'
		//    workflows += Workflow*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'app' name=ID ';'
		//workflows += Workflow*
		public Group getGroup() { return cGroup; }
		
		//'app'
		public Keyword getAppKeyword_0() { return cAppKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
		
		//workflows += Workflow*
		public Assignment getWorkflowsAssignment_3() { return cWorkflowsAssignment_3; }
		
		//Workflow
		public RuleCall getWorkflowsWorkflowParserRuleCall_3_0() { return cWorkflowsWorkflowParserRuleCall_3_0; }
	}
	public class WorkflowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eu.extremexp.ssfhai.dsl.MLDSL.Workflow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWorkflowKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cTasksAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cTasksTaskParserRuleCall_3_0_0 = (RuleCall)cTasksAssignment_3_0.eContents().get(0);
		private final Assignment cFlowsAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cFlowsFlowParserRuleCall_3_1_0 = (RuleCall)cFlowsAssignment_3_1.eContents().get(0);
		private final Assignment cDataAssignment_3_2 = (Assignment)cAlternatives_3.eContents().get(2);
		private final RuleCall cDataDataParserRuleCall_3_2_0 = (RuleCall)cDataAssignment_3_2.eContents().get(0);
		private final Assignment cNetworksAssignment_3_3 = (Assignment)cAlternatives_3.eContents().get(3);
		private final RuleCall cNetworksNetworkParserRuleCall_3_3_0 = (RuleCall)cNetworksAssignment_3_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Workflow:
		//    'workflow' name=ID '{'
		//        (
		//            tasks+=Task |
		//            flows+=Flow    |
		//            data+=Data    |
		//            networks+=Network
		//        )*
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'workflow' name=ID '{'
		//    (
		//        tasks+=Task |
		//        flows+=Flow    |
		//        data+=Data    |
		//        networks+=Network
		//    )*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'workflow'
		public Keyword getWorkflowKeyword_0() { return cWorkflowKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//(
		//    tasks+=Task |
		//    flows+=Flow    |
		//    data+=Data    |
		//    networks+=Network
		//)*
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//tasks+=Task
		public Assignment getTasksAssignment_3_0() { return cTasksAssignment_3_0; }
		
		//Task
		public RuleCall getTasksTaskParserRuleCall_3_0_0() { return cTasksTaskParserRuleCall_3_0_0; }
		
		//flows+=Flow
		public Assignment getFlowsAssignment_3_1() { return cFlowsAssignment_3_1; }
		
		//Flow
		public RuleCall getFlowsFlowParserRuleCall_3_1_0() { return cFlowsFlowParserRuleCall_3_1_0; }
		
		//data+=Data
		public Assignment getDataAssignment_3_2() { return cDataAssignment_3_2; }
		
		//Data
		public RuleCall getDataDataParserRuleCall_3_2_0() { return cDataDataParserRuleCall_3_2_0; }
		
		//networks+=Network
		public Assignment getNetworksAssignment_3_3() { return cNetworksAssignment_3_3; }
		
		//Network
		public RuleCall getNetworksNetworkParserRuleCall_3_3_0() { return cNetworksNetworkParserRuleCall_3_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class DataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eu.extremexp.ssfhai.dsl.MLDSL.Data");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cDataKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Keyword cPathKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cPathAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final RuleCall cPathSTRINGTerminalRuleCall_0_4_0 = (RuleCall)cPathAssignment_0_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cFeaturesKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cFeaturesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cFeaturesSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cFeaturesAssignment_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cTargetKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTargetAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTargetSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cTargetAssignment_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		
		//Data:
		//    'data' name=ID '{'
		//            'path' path=STRING ';' & 'features' features=STRING ';' & 'target' target=STRING ';'
		//        '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'data' name=ID '{'
		//        'path' path=STRING ';' & 'features' features=STRING ';' & 'target' target=STRING ';'
		//    '}'
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//'data' name=ID '{'
		//        'path' path=STRING ';'
		public Group getGroup_0() { return cGroup_0; }
		
		//'data'
		public Keyword getDataKeyword_0_0() { return cDataKeyword_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_1_0() { return cNameIDTerminalRuleCall_0_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0_2() { return cLeftCurlyBracketKeyword_0_2; }
		
		//'path'
		public Keyword getPathKeyword_0_3() { return cPathKeyword_0_3; }
		
		//path=STRING
		public Assignment getPathAssignment_0_4() { return cPathAssignment_0_4; }
		
		//STRING
		public RuleCall getPathSTRINGTerminalRuleCall_0_4_0() { return cPathSTRINGTerminalRuleCall_0_4_0; }
		
		//';'
		public Keyword getSemicolonKeyword_0_5() { return cSemicolonKeyword_0_5; }
		
		//'features' features=STRING ';'
		public Group getGroup_1() { return cGroup_1; }
		
		//'features'
		public Keyword getFeaturesKeyword_1_0() { return cFeaturesKeyword_1_0; }
		
		//features=STRING
		public Assignment getFeaturesAssignment_1_1() { return cFeaturesAssignment_1_1; }
		
		//STRING
		public RuleCall getFeaturesSTRINGTerminalRuleCall_1_1_0() { return cFeaturesSTRINGTerminalRuleCall_1_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_1_2() { return cSemicolonKeyword_1_2; }
		
		//'target' target=STRING ';'
		//       '}'
		public Group getGroup_2() { return cGroup_2; }
		
		//'target'
		public Keyword getTargetKeyword_2_0() { return cTargetKeyword_2_0; }
		
		//target=STRING
		public Assignment getTargetAssignment_2_1() { return cTargetAssignment_2_1; }
		
		//STRING
		public RuleCall getTargetSTRINGTerminalRuleCall_2_1_0() { return cTargetSTRINGTerminalRuleCall_2_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2_2() { return cSemicolonKeyword_2_2; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_3() { return cRightCurlyBracketKeyword_2_3; }
	}
	public class TaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eu.extremexp.ssfhai.dsl.MLDSL.Task");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTaskKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParamsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cParamsParamParserRuleCall_3_0 = (RuleCall)cParamsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Task:
		//    'task' name=ID '{'
		//        params+=Param*
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'task' name=ID '{'
		//    params+=Param*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'task'
		public Keyword getTaskKeyword_0() { return cTaskKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//params+=Param*
		public Assignment getParamsAssignment_3() { return cParamsAssignment_3; }
		
		//Param
		public RuleCall getParamsParamParserRuleCall_3_0() { return cParamsParamParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class WorkflowEntintyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eu.extremexp.ssfhai.dsl.MLDSL.WorkflowEntinty");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDataParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTaskParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cNetworkParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//WorkflowEntinty:
		//    Data | Task | Network
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Data | Task | Network
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Data
		public RuleCall getDataParserRuleCall_0() { return cDataParserRuleCall_0; }
		
		//Task
		public RuleCall getTaskParserRuleCall_1() { return cTaskParserRuleCall_1; }
		
		//Network
		public RuleCall getNetworkParserRuleCall_2() { return cNetworkParserRuleCall_2; }
	}
	public class ParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eu.extremexp.ssfhai.dsl.MLDSL.Param");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cParamKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cParamValueAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cParamValueParamValueParserRuleCall_0_3_0 = (RuleCall)cParamValueAssignment_0_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cParamKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cEntityValueAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final CrossReference cEntityValueWorkflowEntintyCrossReference_1_3_0 = (CrossReference)cEntityValueAssignment_1_3.eContents().get(0);
		private final RuleCall cEntityValueWorkflowEntintyIDTerminalRuleCall_1_3_0_1 = (RuleCall)cEntityValueWorkflowEntintyCrossReference_1_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		
		//Param:
		//    ('param' name=ID '=' (paramValue=ParamValue) ';' )|
		//    ('param' name=ID '=' (entityValue=[WorkflowEntinty]) ';')
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('param' name=ID '=' (paramValue=ParamValue) ';' )|
		//('param' name=ID '=' (entityValue=[WorkflowEntinty]) ';')
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//('param' name=ID '=' (paramValue=ParamValue) ';' )
		public Group getGroup_0() { return cGroup_0; }
		
		//'param'
		public Keyword getParamKeyword_0_0() { return cParamKeyword_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_1_0() { return cNameIDTerminalRuleCall_0_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_2() { return cEqualsSignKeyword_0_2; }
		
		//(paramValue=ParamValue)
		public Assignment getParamValueAssignment_0_3() { return cParamValueAssignment_0_3; }
		
		//ParamValue
		public RuleCall getParamValueParamValueParserRuleCall_0_3_0() { return cParamValueParamValueParserRuleCall_0_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_0_4() { return cSemicolonKeyword_0_4; }
		
		//('param' name=ID '=' (entityValue=[WorkflowEntinty]) ';')
		public Group getGroup_1() { return cGroup_1; }
		
		//'param'
		public Keyword getParamKeyword_1_0() { return cParamKeyword_1_0; }
		
		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_2() { return cEqualsSignKeyword_1_2; }
		
		//(entityValue=[WorkflowEntinty])
		public Assignment getEntityValueAssignment_1_3() { return cEntityValueAssignment_1_3; }
		
		//[WorkflowEntinty]
		public CrossReference getEntityValueWorkflowEntintyCrossReference_1_3_0() { return cEntityValueWorkflowEntintyCrossReference_1_3_0; }
		
		//ID
		public RuleCall getEntityValueWorkflowEntintyIDTerminalRuleCall_1_3_0_1() { return cEntityValueWorkflowEntintyIDTerminalRuleCall_1_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_4() { return cSemicolonKeyword_1_4; }
	}
	public class FlowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eu.extremexp.ssfhai.dsl.MLDSL.Flow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSequenceStartAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cSequenceStartTaskCrossReference_0_0 = (CrossReference)cSequenceStartAssignment_0.eContents().get(0);
		private final RuleCall cSequenceStartTaskIDTerminalRuleCall_0_0_1 = (RuleCall)cSequenceStartTaskCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cSequenceAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cSequenceTaskCrossReference_1_1_0 = (CrossReference)cSequenceAssignment_1_1.eContents().get(0);
		private final RuleCall cSequenceTaskIDTerminalRuleCall_1_1_0_1 = (RuleCall)cSequenceTaskCrossReference_1_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Flow:
		//    sequenceStart = [Task] ('->' sequence+=[Task])+ ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//sequenceStart = [Task] ('->' sequence+=[Task])+ ';'
		public Group getGroup() { return cGroup; }
		
		//sequenceStart = [Task]
		public Assignment getSequenceStartAssignment_0() { return cSequenceStartAssignment_0; }
		
		//[Task]
		public CrossReference getSequenceStartTaskCrossReference_0_0() { return cSequenceStartTaskCrossReference_0_0; }
		
		//ID
		public RuleCall getSequenceStartTaskIDTerminalRuleCall_0_0_1() { return cSequenceStartTaskIDTerminalRuleCall_0_0_1; }
		
		//('->' sequence+=[Task])+
		public Group getGroup_1() { return cGroup_1; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_1_0() { return cHyphenMinusGreaterThanSignKeyword_1_0; }
		
		//sequence+=[Task]
		public Assignment getSequenceAssignment_1_1() { return cSequenceAssignment_1_1; }
		
		//[Task]
		public CrossReference getSequenceTaskCrossReference_1_1_0() { return cSequenceTaskCrossReference_1_1_0; }
		
		//ID
		public RuleCall getSequenceTaskIDTerminalRuleCall_1_1_0_1() { return cSequenceTaskIDTerminalRuleCall_1_1_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class NetworkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eu.extremexp.ssfhai.dsl.MLDSL.Network");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNetworkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cLayersAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cLayersLayerParserRuleCall_3_0_0 = (RuleCall)cLayersAssignment_3_0.eContents().get(0);
		private final Assignment cForwardsAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cForwardsForwardParserRuleCall_3_1_0 = (RuleCall)cForwardsAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Network:
		//    'network' name=ID  '{'
		//        (
		//            layers += Layer        |
		//            forwards += Forward
		//        )*
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'network' name=ID  '{'
		//    (
		//        layers += Layer        |
		//        forwards += Forward
		//    )*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'network'
		public Keyword getNetworkKeyword_0() { return cNetworkKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//(
		//    layers += Layer        |
		//    forwards += Forward
		//)*
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//layers += Layer
		public Assignment getLayersAssignment_3_0() { return cLayersAssignment_3_0; }
		
		//Layer
		public RuleCall getLayersLayerParserRuleCall_3_0_0() { return cLayersLayerParserRuleCall_3_0_0; }
		
		//forwards += Forward
		public Assignment getForwardsAssignment_3_1() { return cForwardsAssignment_3_1; }
		
		//Forward
		public RuleCall getForwardsForwardParserRuleCall_3_1_0() { return cForwardsForwardParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class LayerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eu.extremexp.ssfhai.dsl.MLDSL.Layer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLayerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOptionsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOptionsOptionParserRuleCall_2_1_0 = (RuleCall)cOptionsAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cOptionsAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cOptionsOptionParserRuleCall_2_2_1_0 = (RuleCall)cOptionsAssignment_2_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Layer:
		//    'layer' name=ID ('(' options+= Option (',' options+= Option)* ')')? ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'layer' name=ID ('(' options+= Option (',' options+= Option)* ')')? ';'
		public Group getGroup() { return cGroup; }
		
		//'layer'
		public Keyword getLayerKeyword_0() { return cLayerKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('(' options+= Option (',' options+= Option)* ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//options+= Option
		public Assignment getOptionsAssignment_2_1() { return cOptionsAssignment_2_1; }
		
		//Option
		public RuleCall getOptionsOptionParserRuleCall_2_1_0() { return cOptionsOptionParserRuleCall_2_1_0; }
		
		//(',' options+= Option)*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//options+= Option
		public Assignment getOptionsAssignment_2_2_1() { return cOptionsAssignment_2_2_1; }
		
		//Option
		public RuleCall getOptionsOptionParserRuleCall_2_2_1_0() { return cOptionsOptionParserRuleCall_2_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class ForwardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eu.extremexp.ssfhai.dsl.MLDSL.Forward");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSequenceStartAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cSequenceStartLayerCrossReference_0_0 = (CrossReference)cSequenceStartAssignment_0.eContents().get(0);
		private final RuleCall cSequenceStartLayerIDTerminalRuleCall_0_0_1 = (RuleCall)cSequenceStartLayerCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cSequenceAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cSequenceLayerCrossReference_1_1_0 = (CrossReference)cSequenceAssignment_1_1.eContents().get(0);
		private final RuleCall cSequenceLayerIDTerminalRuleCall_1_1_0_1 = (RuleCall)cSequenceLayerCrossReference_1_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Forward:
		//    sequenceStart = [Layer] ('->' sequence+=[Layer])+ ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//sequenceStart = [Layer] ('->' sequence+=[Layer])+ ';'
		public Group getGroup() { return cGroup; }
		
		//sequenceStart = [Layer]
		public Assignment getSequenceStartAssignment_0() { return cSequenceStartAssignment_0; }
		
		//[Layer]
		public CrossReference getSequenceStartLayerCrossReference_0_0() { return cSequenceStartLayerCrossReference_0_0; }
		
		//ID
		public RuleCall getSequenceStartLayerIDTerminalRuleCall_0_0_1() { return cSequenceStartLayerIDTerminalRuleCall_0_0_1; }
		
		//('->' sequence+=[Layer])+
		public Group getGroup_1() { return cGroup_1; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_1_0() { return cHyphenMinusGreaterThanSignKeyword_1_0; }
		
		//sequence+=[Layer]
		public Assignment getSequenceAssignment_1_1() { return cSequenceAssignment_1_1; }
		
		//[Layer]
		public CrossReference getSequenceLayerCrossReference_1_1_0() { return cSequenceLayerCrossReference_1_1_0; }
		
		//ID
		public RuleCall getSequenceLayerIDTerminalRuleCall_1_1_0_1() { return cSequenceLayerIDTerminalRuleCall_1_1_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class FLOATElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eu.extremexp.ssfhai.dsl.MLDSL.FLOAT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDecAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDecINTTerminalRuleCall_0_0 = (RuleCall)cDecAssignment_0.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPerAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPerINTTerminalRuleCall_2_0 = (RuleCall)cPerAssignment_2.eContents().get(0);
		
		//FLOAT :
		//    dec=INT'.'per=INT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//dec=INT'.'per=INT
		public Group getGroup() { return cGroup; }
		
		//dec=INT
		public Assignment getDecAssignment_0() { return cDecAssignment_0; }
		
		//INT
		public RuleCall getDecINTTerminalRuleCall_0_0() { return cDecINTTerminalRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//per=INT
		public Assignment getPerAssignment_2() { return cPerAssignment_2; }
		
		//INT
		public RuleCall getPerINTTerminalRuleCall_2_0() { return cPerINTTerminalRuleCall_2_0; }
	}
	public class OptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eu.extremexp.ssfhai.dsl.MLDSL.Option");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cTypeKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cTypeAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cTypeLayerTypeEnumRuleCall_0_2_0 = (RuleCall)cTypeAssignment_0_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cInputSizeKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cInputSizeAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cInputSizeINTTerminalRuleCall_1_2_0 = (RuleCall)cInputSizeAssignment_1_2.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cOutputSizeKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cOutputSizeAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cOutputSizeINTTerminalRuleCall_2_2_0 = (RuleCall)cOutputSizeAssignment_2_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cDroputRateKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cDropeoutRateAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cDropeoutRateFLOATParserRuleCall_3_2_0 = (RuleCall)cDropeoutRateAssignment_3_2.eContents().get(0);
		
		//Option:
		//    ('type' '=' type = LayerType)     |
		//    ('inputSize' '=' inputSize = INT)     |
		//    ('outputSize' '=' outputSize = INT) |
		//    ('droputRate' '=' dropeoutRate = FLOAT)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('type' '=' type = LayerType)     |
		//('inputSize' '=' inputSize = INT)     |
		//('outputSize' '=' outputSize = INT) |
		//('droputRate' '=' dropeoutRate = FLOAT)
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//('type' '=' type = LayerType)
		public Group getGroup_0() { return cGroup_0; }
		
		//'type'
		public Keyword getTypeKeyword_0_0() { return cTypeKeyword_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_1() { return cEqualsSignKeyword_0_1; }
		
		//type = LayerType
		public Assignment getTypeAssignment_0_2() { return cTypeAssignment_0_2; }
		
		//LayerType
		public RuleCall getTypeLayerTypeEnumRuleCall_0_2_0() { return cTypeLayerTypeEnumRuleCall_0_2_0; }
		
		//('inputSize' '=' inputSize = INT)
		public Group getGroup_1() { return cGroup_1; }
		
		//'inputSize'
		public Keyword getInputSizeKeyword_1_0() { return cInputSizeKeyword_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_1() { return cEqualsSignKeyword_1_1; }
		
		//inputSize = INT
		public Assignment getInputSizeAssignment_1_2() { return cInputSizeAssignment_1_2; }
		
		//INT
		public RuleCall getInputSizeINTTerminalRuleCall_1_2_0() { return cInputSizeINTTerminalRuleCall_1_2_0; }
		
		//('outputSize' '=' outputSize = INT)
		public Group getGroup_2() { return cGroup_2; }
		
		//'outputSize'
		public Keyword getOutputSizeKeyword_2_0() { return cOutputSizeKeyword_2_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_1() { return cEqualsSignKeyword_2_1; }
		
		//outputSize = INT
		public Assignment getOutputSizeAssignment_2_2() { return cOutputSizeAssignment_2_2; }
		
		//INT
		public RuleCall getOutputSizeINTTerminalRuleCall_2_2_0() { return cOutputSizeINTTerminalRuleCall_2_2_0; }
		
		//('droputRate' '=' dropeoutRate = FLOAT)
		public Group getGroup_3() { return cGroup_3; }
		
		//'droputRate'
		public Keyword getDroputRateKeyword_3_0() { return cDroputRateKeyword_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }
		
		//dropeoutRate = FLOAT
		public Assignment getDropeoutRateAssignment_3_2() { return cDropeoutRateAssignment_3_2; }
		
		//FLOAT
		public RuleCall getDropeoutRateFLOATParserRuleCall_3_2_0() { return cDropeoutRateFLOATParserRuleCall_3_2_0; }
	}
	public class ParamValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eu.extremexp.ssfhai.dsl.MLDSL.ParamValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cIntValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cIntValueINTTerminalRuleCall_0_0 = (RuleCall)cIntValueAssignment_0.eContents().get(0);
		private final Assignment cFloatValueAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cFloatValueFLOATParserRuleCall_1_0 = (RuleCall)cFloatValueAssignment_1.eContents().get(0);
		private final Assignment cStringValueAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cStringValueSTRINGTerminalRuleCall_2_0 = (RuleCall)cStringValueAssignment_2.eContents().get(0);
		
		//ParamValue:
		//    intValue=INT | floatValue=FLOAT | stringValue=STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//intValue=INT | floatValue=FLOAT | stringValue=STRING
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//intValue=INT
		public Assignment getIntValueAssignment_0() { return cIntValueAssignment_0; }
		
		//INT
		public RuleCall getIntValueINTTerminalRuleCall_0_0() { return cIntValueINTTerminalRuleCall_0_0; }
		
		//floatValue=FLOAT
		public Assignment getFloatValueAssignment_1() { return cFloatValueAssignment_1; }
		
		//FLOAT
		public RuleCall getFloatValueFLOATParserRuleCall_1_0() { return cFloatValueFLOATParserRuleCall_1_0; }
		
		//stringValue=STRING
		public Assignment getStringValueAssignment_2() { return cStringValueAssignment_2; }
		
		//STRING
		public RuleCall getStringValueSTRINGTerminalRuleCall_2_0() { return cStringValueSTRINGTerminalRuleCall_2_0; }
	}
	
	public class LayerTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "eu.extremexp.ssfhai.dsl.MLDSL.LayerType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cInputEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cInputInputKeyword_0_0 = (Keyword)cInputEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cLinearEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cLinearLinearKeyword_1_0 = (Keyword)cLinearEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSigmoidEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSigmoidSigmoidKeyword_2_0 = (Keyword)cSigmoidEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cBNEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cBNBNKeyword_3_0 = (Keyword)cBNEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDropOutEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDropOutDropOutKeyword_4_0 = (Keyword)cDropOutEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum LayerType:
		//    Input | Linear | Sigmoid | BN | DropOut
		//;
		public EnumRule getRule() { return rule; }
		
		//Input | Linear | Sigmoid | BN | DropOut
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Input
		public EnumLiteralDeclaration getInputEnumLiteralDeclaration_0() { return cInputEnumLiteralDeclaration_0; }
		
		public Keyword getInputInputKeyword_0_0() { return cInputInputKeyword_0_0; }
		
		//Linear
		public EnumLiteralDeclaration getLinearEnumLiteralDeclaration_1() { return cLinearEnumLiteralDeclaration_1; }
		
		public Keyword getLinearLinearKeyword_1_0() { return cLinearLinearKeyword_1_0; }
		
		//Sigmoid
		public EnumLiteralDeclaration getSigmoidEnumLiteralDeclaration_2() { return cSigmoidEnumLiteralDeclaration_2; }
		
		public Keyword getSigmoidSigmoidKeyword_2_0() { return cSigmoidSigmoidKeyword_2_0; }
		
		//BN
		public EnumLiteralDeclaration getBNEnumLiteralDeclaration_3() { return cBNEnumLiteralDeclaration_3; }
		
		public Keyword getBNBNKeyword_3_0() { return cBNBNKeyword_3_0; }
		
		//DropOut
		public EnumLiteralDeclaration getDropOutEnumLiteralDeclaration_4() { return cDropOutEnumLiteralDeclaration_4; }
		
		public Keyword getDropOutDropOutKeyword_4_0() { return cDropOutDropOutKeyword_4_0; }
	}
	
	private final ModelElements pModel;
	private final WorkflowElements pWorkflow;
	private final DataElements pData;
	private final TaskElements pTask;
	private final WorkflowEntintyElements pWorkflowEntinty;
	private final ParamElements pParam;
	private final FlowElements pFlow;
	private final NetworkElements pNetwork;
	private final LayerElements pLayer;
	private final ForwardElements pForward;
	private final LayerTypeElements eLayerType;
	private final FLOATElements pFLOAT;
	private final OptionElements pOption;
	private final ParamValueElements pParamValue;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MLDSLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pWorkflow = new WorkflowElements();
		this.pData = new DataElements();
		this.pTask = new TaskElements();
		this.pWorkflowEntinty = new WorkflowEntintyElements();
		this.pParam = new ParamElements();
		this.pFlow = new FlowElements();
		this.pNetwork = new NetworkElements();
		this.pLayer = new LayerElements();
		this.pForward = new ForwardElements();
		this.eLayerType = new LayerTypeElements();
		this.pFLOAT = new FLOATElements();
		this.pOption = new OptionElements();
		this.pParamValue = new ParamValueElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("eu.extremexp.ssfhai.dsl.MLDSL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//    'app' name=ID ';'
	//    workflows += Workflow*
	//;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Workflow:
	//    'workflow' name=ID '{'
	//        (
	//            tasks+=Task |
	//            flows+=Flow    |
	//            data+=Data    |
	//            networks+=Network
	//        )*
	//    '}'
	//;
	public WorkflowElements getWorkflowAccess() {
		return pWorkflow;
	}
	
	public ParserRule getWorkflowRule() {
		return getWorkflowAccess().getRule();
	}
	
	//Data:
	//    'data' name=ID '{'
	//            'path' path=STRING ';' & 'features' features=STRING ';' & 'target' target=STRING ';'
	//        '}'
	//;
	public DataElements getDataAccess() {
		return pData;
	}
	
	public ParserRule getDataRule() {
		return getDataAccess().getRule();
	}
	
	//Task:
	//    'task' name=ID '{'
	//        params+=Param*
	//    '}'
	//;
	public TaskElements getTaskAccess() {
		return pTask;
	}
	
	public ParserRule getTaskRule() {
		return getTaskAccess().getRule();
	}
	
	//WorkflowEntinty:
	//    Data | Task | Network
	//;
	public WorkflowEntintyElements getWorkflowEntintyAccess() {
		return pWorkflowEntinty;
	}
	
	public ParserRule getWorkflowEntintyRule() {
		return getWorkflowEntintyAccess().getRule();
	}
	
	//Param:
	//    ('param' name=ID '=' (paramValue=ParamValue) ';' )|
	//    ('param' name=ID '=' (entityValue=[WorkflowEntinty]) ';')
	//;
	public ParamElements getParamAccess() {
		return pParam;
	}
	
	public ParserRule getParamRule() {
		return getParamAccess().getRule();
	}
	
	//Flow:
	//    sequenceStart = [Task] ('->' sequence+=[Task])+ ';'
	//;
	public FlowElements getFlowAccess() {
		return pFlow;
	}
	
	public ParserRule getFlowRule() {
		return getFlowAccess().getRule();
	}
	
	//Network:
	//    'network' name=ID  '{'
	//        (
	//            layers += Layer        |
	//            forwards += Forward
	//        )*
	//    '}'
	//;
	public NetworkElements getNetworkAccess() {
		return pNetwork;
	}
	
	public ParserRule getNetworkRule() {
		return getNetworkAccess().getRule();
	}
	
	//Layer:
	//    'layer' name=ID ('(' options+= Option (',' options+= Option)* ')')? ';'
	//;
	public LayerElements getLayerAccess() {
		return pLayer;
	}
	
	public ParserRule getLayerRule() {
		return getLayerAccess().getRule();
	}
	
	//Forward:
	//    sequenceStart = [Layer] ('->' sequence+=[Layer])+ ';'
	//;
	public ForwardElements getForwardAccess() {
		return pForward;
	}
	
	public ParserRule getForwardRule() {
		return getForwardAccess().getRule();
	}
	
	//enum LayerType:
	//    Input | Linear | Sigmoid | BN | DropOut
	//;
	public LayerTypeElements getLayerTypeAccess() {
		return eLayerType;
	}
	
	public EnumRule getLayerTypeRule() {
		return getLayerTypeAccess().getRule();
	}
	
	//FLOAT :
	//    dec=INT'.'per=INT
	//;
	public FLOATElements getFLOATAccess() {
		return pFLOAT;
	}
	
	public ParserRule getFLOATRule() {
		return getFLOATAccess().getRule();
	}
	
	//Option:
	//    ('type' '=' type = LayerType)     |
	//    ('inputSize' '=' inputSize = INT)     |
	//    ('outputSize' '=' outputSize = INT) |
	//    ('droputRate' '=' dropeoutRate = FLOAT)
	//;
	public OptionElements getOptionAccess() {
		return pOption;
	}
	
	public ParserRule getOptionRule() {
		return getOptionAccess().getRule();
	}
	
	//ParamValue:
	//    intValue=INT | floatValue=FLOAT | stringValue=STRING
	//;
	public ParamValueElements getParamValueAccess() {
		return pParamValue;
	}
	
	public ParserRule getParamValueRule() {
		return getParamValueAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
