/**
 * generated by Xtext 2.40.0.M3
 */
package eu.extremexp.ssfhai.dsl.mLDSL.impl;

import eu.extremexp.ssfhai.dsl.mLDSL.FLOAT;
import eu.extremexp.ssfhai.dsl.mLDSL.MLDSLPackage;
import eu.extremexp.ssfhai.dsl.mLDSL.ParamValue;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Param Value</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link eu.extremexp.ssfhai.dsl.mLDSL.impl.ParamValueImpl#getIntValue <em>Int Value</em>}</li>
 *   <li>{@link eu.extremexp.ssfhai.dsl.mLDSL.impl.ParamValueImpl#getFloatValue <em>Float Value</em>}</li>
 *   <li>{@link eu.extremexp.ssfhai.dsl.mLDSL.impl.ParamValueImpl#getStringValue <em>String Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ParamValueImpl extends MinimalEObjectImpl.Container implements ParamValue
{
  /**
   * The default value of the '{@link #getIntValue() <em>Int Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIntValue()
   * @generated
   * @ordered
   */
  protected static final int INT_VALUE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getIntValue() <em>Int Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIntValue()
   * @generated
   * @ordered
   */
  protected int intValue = INT_VALUE_EDEFAULT;

  /**
   * The cached value of the '{@link #getFloatValue() <em>Float Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFloatValue()
   * @generated
   * @ordered
   */
  protected FLOAT floatValue;

  /**
   * The default value of the '{@link #getStringValue() <em>String Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStringValue()
   * @generated
   * @ordered
   */
  protected static final String STRING_VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStringValue() <em>String Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStringValue()
   * @generated
   * @ordered
   */
  protected String stringValue = STRING_VALUE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ParamValueImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MLDSLPackage.Literals.PARAM_VALUE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getIntValue()
  {
    return intValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIntValue(int newIntValue)
  {
    int oldIntValue = intValue;
    intValue = newIntValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MLDSLPackage.PARAM_VALUE__INT_VALUE, oldIntValue, intValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FLOAT getFloatValue()
  {
    return floatValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFloatValue(FLOAT newFloatValue, NotificationChain msgs)
  {
    FLOAT oldFloatValue = floatValue;
    floatValue = newFloatValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MLDSLPackage.PARAM_VALUE__FLOAT_VALUE, oldFloatValue, newFloatValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFloatValue(FLOAT newFloatValue)
  {
    if (newFloatValue != floatValue)
    {
      NotificationChain msgs = null;
      if (floatValue != null)
        msgs = ((InternalEObject)floatValue).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MLDSLPackage.PARAM_VALUE__FLOAT_VALUE, null, msgs);
      if (newFloatValue != null)
        msgs = ((InternalEObject)newFloatValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MLDSLPackage.PARAM_VALUE__FLOAT_VALUE, null, msgs);
      msgs = basicSetFloatValue(newFloatValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MLDSLPackage.PARAM_VALUE__FLOAT_VALUE, newFloatValue, newFloatValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getStringValue()
  {
    return stringValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStringValue(String newStringValue)
  {
    String oldStringValue = stringValue;
    stringValue = newStringValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MLDSLPackage.PARAM_VALUE__STRING_VALUE, oldStringValue, stringValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MLDSLPackage.PARAM_VALUE__FLOAT_VALUE:
        return basicSetFloatValue(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MLDSLPackage.PARAM_VALUE__INT_VALUE:
        return getIntValue();
      case MLDSLPackage.PARAM_VALUE__FLOAT_VALUE:
        return getFloatValue();
      case MLDSLPackage.PARAM_VALUE__STRING_VALUE:
        return getStringValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MLDSLPackage.PARAM_VALUE__INT_VALUE:
        setIntValue((Integer)newValue);
        return;
      case MLDSLPackage.PARAM_VALUE__FLOAT_VALUE:
        setFloatValue((FLOAT)newValue);
        return;
      case MLDSLPackage.PARAM_VALUE__STRING_VALUE:
        setStringValue((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MLDSLPackage.PARAM_VALUE__INT_VALUE:
        setIntValue(INT_VALUE_EDEFAULT);
        return;
      case MLDSLPackage.PARAM_VALUE__FLOAT_VALUE:
        setFloatValue((FLOAT)null);
        return;
      case MLDSLPackage.PARAM_VALUE__STRING_VALUE:
        setStringValue(STRING_VALUE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MLDSLPackage.PARAM_VALUE__INT_VALUE:
        return intValue != INT_VALUE_EDEFAULT;
      case MLDSLPackage.PARAM_VALUE__FLOAT_VALUE:
        return floatValue != null;
      case MLDSLPackage.PARAM_VALUE__STRING_VALUE:
        return STRING_VALUE_EDEFAULT == null ? stringValue != null : !STRING_VALUE_EDEFAULT.equals(stringValue);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (intValue: ");
    result.append(intValue);
    result.append(", stringValue: ");
    result.append(stringValue);
    result.append(')');
    return result.toString();
  }

} //ParamValueImpl
