/**
 * generated by Xtext 2.40.0.M3
 */
package eu.extremexp.ssfhai.dsl.mLDSL.impl;

import eu.extremexp.ssfhai.dsl.mLDSL.FLOAT;
import eu.extremexp.ssfhai.dsl.mLDSL.LayerType;
import eu.extremexp.ssfhai.dsl.mLDSL.MLDSLPackage;
import eu.extremexp.ssfhai.dsl.mLDSL.Option;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Option</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link eu.extremexp.ssfhai.dsl.mLDSL.impl.OptionImpl#getType <em>Type</em>}</li>
 *   <li>{@link eu.extremexp.ssfhai.dsl.mLDSL.impl.OptionImpl#getInputSize <em>Input Size</em>}</li>
 *   <li>{@link eu.extremexp.ssfhai.dsl.mLDSL.impl.OptionImpl#getOutputSize <em>Output Size</em>}</li>
 *   <li>{@link eu.extremexp.ssfhai.dsl.mLDSL.impl.OptionImpl#getDropeoutRate <em>Dropeout Rate</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OptionImpl extends MinimalEObjectImpl.Container implements Option
{
  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final LayerType TYPE_EDEFAULT = LayerType.INPUT;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected LayerType type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getInputSize() <em>Input Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInputSize()
   * @generated
   * @ordered
   */
  protected static final int INPUT_SIZE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getInputSize() <em>Input Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInputSize()
   * @generated
   * @ordered
   */
  protected int inputSize = INPUT_SIZE_EDEFAULT;

  /**
   * The default value of the '{@link #getOutputSize() <em>Output Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutputSize()
   * @generated
   * @ordered
   */
  protected static final int OUTPUT_SIZE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getOutputSize() <em>Output Size</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutputSize()
   * @generated
   * @ordered
   */
  protected int outputSize = OUTPUT_SIZE_EDEFAULT;

  /**
   * The cached value of the '{@link #getDropeoutRate() <em>Dropeout Rate</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDropeoutRate()
   * @generated
   * @ordered
   */
  protected FLOAT dropeoutRate;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OptionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MLDSLPackage.Literals.OPTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LayerType getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(LayerType newType)
  {
    LayerType oldType = type;
    type = newType == null ? TYPE_EDEFAULT : newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MLDSLPackage.OPTION__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getInputSize()
  {
    return inputSize;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInputSize(int newInputSize)
  {
    int oldInputSize = inputSize;
    inputSize = newInputSize;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MLDSLPackage.OPTION__INPUT_SIZE, oldInputSize, inputSize));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getOutputSize()
  {
    return outputSize;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOutputSize(int newOutputSize)
  {
    int oldOutputSize = outputSize;
    outputSize = newOutputSize;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MLDSLPackage.OPTION__OUTPUT_SIZE, oldOutputSize, outputSize));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FLOAT getDropeoutRate()
  {
    return dropeoutRate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDropeoutRate(FLOAT newDropeoutRate, NotificationChain msgs)
  {
    FLOAT oldDropeoutRate = dropeoutRate;
    dropeoutRate = newDropeoutRate;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MLDSLPackage.OPTION__DROPEOUT_RATE, oldDropeoutRate, newDropeoutRate);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDropeoutRate(FLOAT newDropeoutRate)
  {
    if (newDropeoutRate != dropeoutRate)
    {
      NotificationChain msgs = null;
      if (dropeoutRate != null)
        msgs = ((InternalEObject)dropeoutRate).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MLDSLPackage.OPTION__DROPEOUT_RATE, null, msgs);
      if (newDropeoutRate != null)
        msgs = ((InternalEObject)newDropeoutRate).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MLDSLPackage.OPTION__DROPEOUT_RATE, null, msgs);
      msgs = basicSetDropeoutRate(newDropeoutRate, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MLDSLPackage.OPTION__DROPEOUT_RATE, newDropeoutRate, newDropeoutRate));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MLDSLPackage.OPTION__DROPEOUT_RATE:
        return basicSetDropeoutRate(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MLDSLPackage.OPTION__TYPE:
        return getType();
      case MLDSLPackage.OPTION__INPUT_SIZE:
        return getInputSize();
      case MLDSLPackage.OPTION__OUTPUT_SIZE:
        return getOutputSize();
      case MLDSLPackage.OPTION__DROPEOUT_RATE:
        return getDropeoutRate();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MLDSLPackage.OPTION__TYPE:
        setType((LayerType)newValue);
        return;
      case MLDSLPackage.OPTION__INPUT_SIZE:
        setInputSize((Integer)newValue);
        return;
      case MLDSLPackage.OPTION__OUTPUT_SIZE:
        setOutputSize((Integer)newValue);
        return;
      case MLDSLPackage.OPTION__DROPEOUT_RATE:
        setDropeoutRate((FLOAT)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MLDSLPackage.OPTION__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case MLDSLPackage.OPTION__INPUT_SIZE:
        setInputSize(INPUT_SIZE_EDEFAULT);
        return;
      case MLDSLPackage.OPTION__OUTPUT_SIZE:
        setOutputSize(OUTPUT_SIZE_EDEFAULT);
        return;
      case MLDSLPackage.OPTION__DROPEOUT_RATE:
        setDropeoutRate((FLOAT)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MLDSLPackage.OPTION__TYPE:
        return type != TYPE_EDEFAULT;
      case MLDSLPackage.OPTION__INPUT_SIZE:
        return inputSize != INPUT_SIZE_EDEFAULT;
      case MLDSLPackage.OPTION__OUTPUT_SIZE:
        return outputSize != OUTPUT_SIZE_EDEFAULT;
      case MLDSLPackage.OPTION__DROPEOUT_RATE:
        return dropeoutRate != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (type: ");
    result.append(type);
    result.append(", inputSize: ");
    result.append(inputSize);
    result.append(", outputSize: ");
    result.append(outputSize);
    result.append(')');
    return result.toString();
  }

} //OptionImpl
